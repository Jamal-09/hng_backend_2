const { createCanvas, loadImage } = require("canvas");
const fs = require("fs/promises");
const path = require("path");

async function generateSummaryImage(total, top5, timestamp) {
  const cacheDir = path.join(process.cwd(), "cache");
  try {
    await fs.mkdir(cacheDir, { recursive: true });
  } catch (err) {
    console.error("Error creating cache directory:", err);
  }

  const width = 1200;
  const height = 630;
  const canvas = createCanvas(width, height);
  const ctx = canvas.getContext("2d");

  ctx.fillStyle = "#FFFFFF";
  ctx.fillRect(0, 0, width, height);

  ctx.fillStyle = "#000000";
  ctx.font = "bold 36px Arial";
  ctx.fillText(`Countries cached: ${total}`, 40, 60);

  ctx.font = "20px Arial";
  ctx.fillText(`Last refresh: ${timestamp}`, 40, 100);

  ctx.font = "bold 24px Arial";
  ctx.fillText(`Top 5 by estimated GDP:`, 40, 150);

  ctx.font = "20px Arial";
  top5.forEach((country, i) => {
    const gdp =
      country.estimated_gdp == null
        ? "N/A"
        : Number(country.estimated_gdp).toLocaleString(undefined, {
            maximumFractionDigits: 2,
          });

    const text = `${i + 1}. ${country.name} — ${gdp}`;
    ctx.fillText(text, 60, 190 + i * 36);
  });

  ctx.strokeStyle = "#000";
  ctx.lineWidth = 2;
  ctx.beginPath();
  ctx.moveTo(40, height - 50);
  ctx.lineTo(width - 40, height - 50);
  ctx.stroke();

  ctx.font = "italic 18px Arial";
  ctx.fillText(
    "Generated by HNG13 Backend Stage 2 — Country & Currency API",
    40,
    height - 20
  );

  const outPath = path.join(cacheDir, "summary.png");
  const buffer = canvas.toBuffer("image/png");
  await fs.writeFile(outPath, buffer);

  return outPath;
}

module.exports = { generateSummaryImage };
